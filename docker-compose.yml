services:
  mayatgbot:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - redis-net
    volumes:
      - ./app:/app
      - ./config.yaml:/config/config.yaml

  redis:
    image: "redis:6.2.6-alpine"
    volumes:
      - ./redis_data:/data
    networks:
      - redis-net
    restart: always
    healthcheck:
      # Ready only when Redis is up AND done loading RDB/AOF
      test: [ "CMD-SHELL", "redis-cli -p ${REDIS_PORT} -a '${REDIS_PASSWORD}' ping | grep -q PONG && redis-cli -p ${REDIS_PORT} -a '${REDIS_PASSWORD}' info persistence | grep -q '^loading:0'" ]
      interval: 2s
      timeout: 2s
      retries: 120
      start_period: 2s
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    expose:
      - "${REDIS_PORT}"
    command:
      - 'redis-server'
      - '--save 9000 1'
      - '--save 3000 10'
      - '--save 600 10000'
      - '--port ${REDIS_PORT}'
      - '--requirepass ${REDIS_PASSWORD}'

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8888:8080"
    environment:
      - DOZZLE_USERNAME=${DOZZLE_USERNAME}
      - DOZZLE_PASSWORD=${DOZZLE_PASSWORD}
      - DOZZLE_KEY=${DOZZLE_KEY}
      - DOZZLE_TAILSIZE=${DOZZLE_TAILSIZE}
#
#  nginx:
#    image: nginx:alpine
#    restart: always
#    ports:
#      - "80:80"
#      - "443:443"
#    depends_on:
#      - api
#    networks:
#      - redis-net
#    volumes:
#      - ./web/frontend/:/web/frontend/
#      - ./web/nginx.conf:/etc/nginx/nginx.conf:ro
##      - ./web/nginx-test.conf:/etc/nginx/nginx.conf:ro
#      - "./web/letsencrypt:/etc/letsencrypt:ro"
#    environment:
#      CERTBOT_EMAIL: developer@tirinox.ru
#
#  api:
#    build:
#      context: .
#      dockerfile: Dockerfile-api
#    restart: always
#    depends_on:
#      - redis
#    ports:
#      - "8077:8077"
#    environment:
#      - REDIS_PASSWORD=${REDIS_PASSWORD}
#      - REDIS_HOST=${REDIS_HOST}
#      - REDIS_PORT=${REDIS_PORT}
#    networks:
#      - redis-net
#    volumes:
#      - ./app:/app
#      - ./config.yaml:/config/config.yaml


networks:
  redis-net:

volumes:
  redis_data:
  app:
